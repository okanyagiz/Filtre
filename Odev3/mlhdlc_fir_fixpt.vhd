-- -------------------------------------------------------------
-- 
-- File Name: C:\Users\okany\Documents\MATLAB\odev_3\codegen\mlhdlc_fir\hdlsrc\mlhdlc_fir_fixpt.vhd
-- Created: 2022-05-23 23:02:58
-- 
-- Generated by MATLAB 9.11, MATLAB Coder 5.3 and HDL Coder 3.19
-- 
-- 
-- 
-- -------------------------------------------------------------
-- Rate and Clocking Details
-- -------------------------------------------------------------
-- Design base rate: 1
-- 
-- 
-- Clock Enable  Sample Time
-- -------------------------------------------------------------
-- ce_out        1
-- -------------------------------------------------------------
-- 
-- 
-- Output Signal                 Clock Enable  Sample Time
-- -------------------------------------------------------------
-- outdatabuf                    ce_out        1
-- -------------------------------------------------------------
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: mlhdlc_fir_fixpt
-- Source Path: mlhdlc_fir_fixpt
-- Hierarchy Level: 0
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.mlhdlc_fir_fixpt_pkg.ALL;

ENTITY mlhdlc_fir_fixpt IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        clk_enable                        :   IN    std_logic;
        indatabuf                         :   IN    std_logic_vector(13 DOWNTO 0);  -- sfix14_En10
        ce_out                            :   OUT   std_logic;
        outdatabuf                        :   OUT   std_logic_vector(13 DOWNTO 0)  -- sfix14_En10
        );
END mlhdlc_fir_fixpt;


ARCHITECTURE rtl OF mlhdlc_fir_fixpt IS

  -- Constants
  CONSTANT nc                             : vector_of_signed14(0 TO 160) := 
    (to_signed(-16#0001#, 14), to_signed(-16#0006#, 14), to_signed(-16#000A#, 14), to_signed(-16#000C#, 14),
     to_signed(-16#000A#, 14), to_signed(-16#0005#, 14), to_signed(16#0002#, 14), to_signed(16#0009#, 14),
     to_signed(16#000E#, 14), to_signed(16#000F#, 14), to_signed(16#000C#, 14), to_signed(16#0004#, 14),
     to_signed(-16#0007#, 14), to_signed(-16#0011#, 14), to_signed(-16#0018#, 14), to_signed(-16#0018#, 14),
     to_signed(-16#0011#, 14), to_signed(-16#0003#, 14), to_signed(16#000E#, 14), to_signed(16#001D#, 14),
     to_signed(16#0025#, 14), to_signed(16#0022#, 14), to_signed(16#0013#, 14), to_signed(-16#0004#, 14),
     to_signed(-16#001E#, 14), to_signed(-16#0032#, 14), to_signed(-16#003A#, 14), to_signed(-16#0030#, 14),
     to_signed(-16#0015#, 14), to_signed(16#0010#, 14), to_signed(16#0035#, 14), to_signed(16#004E#, 14),
     to_signed(16#0052#, 14), to_signed(16#003B#, 14), to_signed(16#000F#, 14), to_signed(-16#0028#, 14),
     to_signed(-16#005A#, 14), to_signed(-16#0076#, 14), to_signed(-16#0070#, 14), to_signed(-16#0046#, 14),
     to_signed(16#0000#, 14), to_signed(16#004D#, 14), to_signed(16#008C#, 14), to_signed(16#00A6#, 14),
     to_signed(16#008F#, 14), to_signed(16#0047#, 14), to_signed(-16#0020#, 14), to_signed(-16#0089#, 14),
     to_signed(-16#00D4#, 14), to_signed(-16#00E5#, 14), to_signed(-16#00B1#, 14), to_signed(-16#003E#, 14),
     to_signed(16#0056#, 14), to_signed(16#00E0#, 14), to_signed(16#0135#, 14), to_signed(16#0132#, 14),
     to_signed(16#00CF#, 14), to_signed(16#001D#, 14), to_signed(-16#00B5#, 14), to_signed(-16#0169#, 14),
     to_signed(-16#01C4#, 14), to_signed(-16#019B#, 14), to_signed(-16#00EB#, 14), to_signed(16#002B#, 14),
     to_signed(16#015D#, 14), to_signed(16#0250#, 14), to_signed(16#02AD#, 14), to_signed(16#023E#, 14),
     to_signed(16#00FF#, 14), to_signed(-16#00D5#, 14), to_signed(-16#02C8#, 14), to_signed(-16#0447#, 14),
     to_signed(-16#04BD#, 14), to_signed(-16#03B7#, 14), to_signed(-16#010D#, 14), to_signed(16#0317#, 14),
     to_signed(16#0831#, 14), to_signed(16#0D7F#, 14), to_signed(16#1220#, 14), to_signed(16#1547#, 14),
     to_signed(16#1666#, 14), to_signed(16#1547#, 14), to_signed(16#1220#, 14), to_signed(16#0D7F#, 14),
     to_signed(16#0831#, 14), to_signed(16#0317#, 14), to_signed(-16#010D#, 14), to_signed(-16#03B7#, 14),
     to_signed(-16#04BD#, 14), to_signed(-16#0447#, 14), to_signed(-16#02C8#, 14), to_signed(-16#00D5#, 14),
     to_signed(16#00FF#, 14), to_signed(16#023E#, 14), to_signed(16#02AD#, 14), to_signed(16#0250#, 14),
     to_signed(16#015D#, 14), to_signed(16#002B#, 14), to_signed(-16#00EB#, 14), to_signed(-16#019B#, 14),
     to_signed(-16#01C4#, 14), to_signed(-16#0169#, 14), to_signed(-16#00B5#, 14), to_signed(16#001D#, 14),
     to_signed(16#00CF#, 14), to_signed(16#0132#, 14), to_signed(16#0135#, 14), to_signed(16#00E0#, 14),
     to_signed(16#0056#, 14), to_signed(-16#003E#, 14), to_signed(-16#00B1#, 14), to_signed(-16#00E5#, 14),
     to_signed(-16#00D4#, 14), to_signed(-16#0089#, 14), to_signed(-16#0020#, 14), to_signed(16#0047#, 14),
     to_signed(16#008F#, 14), to_signed(16#00A6#, 14), to_signed(16#008C#, 14), to_signed(16#004D#, 14),
     to_signed(16#0000#, 14), to_signed(-16#0046#, 14), to_signed(-16#0070#, 14), to_signed(-16#0076#, 14),
     to_signed(-16#005A#, 14), to_signed(-16#0028#, 14), to_signed(16#000F#, 14), to_signed(16#003B#, 14),
     to_signed(16#0052#, 14), to_signed(16#004E#, 14), to_signed(16#0035#, 14), to_signed(16#0010#, 14),
     to_signed(-16#0015#, 14), to_signed(-16#0030#, 14), to_signed(-16#003A#, 14), to_signed(-16#0032#, 14),
     to_signed(-16#001E#, 14), to_signed(-16#0004#, 14), to_signed(16#0013#, 14), to_signed(16#0022#, 14),
     to_signed(16#0025#, 14), to_signed(16#001D#, 14), to_signed(16#000E#, 14), to_signed(-16#0003#, 14),
     to_signed(-16#0011#, 14), to_signed(-16#0018#, 14), to_signed(-16#0018#, 14), to_signed(-16#0011#, 14),
     to_signed(-16#0007#, 14), to_signed(16#0004#, 14), to_signed(16#000C#, 14), to_signed(16#000F#, 14),
     to_signed(16#000E#, 14), to_signed(16#0009#, 14), to_signed(16#0002#, 14), to_signed(-16#0005#, 14),
     to_signed(-16#000A#, 14), to_signed(-16#000C#, 14), to_signed(-16#000A#, 14), to_signed(-16#0006#, 14),
     to_signed(-16#0001#, 14));  -- sfix14 [161]

  -- Signals
  SIGNAL enb                              : std_logic;
  SIGNAL tmp                              : vector_of_signed32(0 TO 159);  -- int32 [160]
  SIGNAL indatabuf_signed                 : signed(13 DOWNTO 0);  -- sfix14_En10
  SIGNAL tap_delay                        : vector_of_signed14(0 TO 160);  -- sfix14_En10 [161]
  SIGNAL tmp_1                            : vector_of_signed14(0 TO 159);  -- sfix14_En10 [160]
  SIGNAL tmp_2                            : vector_of_signed14(0 TO 160);  -- sfix14_En10 [161]
  SIGNAL c_1                              : signed(35 DOWNTO 0);  -- sfix36_En25
  SIGNAL outdatabuf_tmp                   : signed(13 DOWNTO 0);  -- sfix14_En10

BEGIN
  -- Shift tap delay line

  tmp_gen: FOR t_0 IN 0 TO 159 GENERATE
    tmp(t_0) <= to_signed(1 + t_0, 32);
  END GENERATE tmp_gen;


  indatabuf_signed <= signed(indatabuf);

  enb <= clk_enable;


  tmp_1_gen: FOR t_01 IN 0 TO 159 GENERATE
    tmp_1(t_01) <= tap_delay(to_integer(tmp(t_01)));
  END GENERATE tmp_1_gen;


  tmp_2(0 TO 159) <= tmp_1(0 TO 159);
  tmp_2(160) <= indatabuf_signed;

  tap_delay_reg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      tap_delay <= (OTHERS => to_signed(16#0000#, 14));
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        tap_delay <= tmp_2;
      END IF;
    END IF;
  END PROCESS tap_delay_reg_process;


  -- HDL code generation from MATLAB function: mlhdlc_fir_fixpt
  -- 
  -- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  -- 
  --                                                                          %
  -- 
  --          Generated by MATLAB 9.11 and Fixed-Point Designer 7.3           %
  -- 
  --                                                                          %
  -- 
  -- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  -- 
  -- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  -- 
  -- MATLAB design: FIR Filter
  -- 
  -- 
  -- 
  -- Key Design pattern covered in this example: 
  -- 
  -- (1) Implementation of a tap delay using a an array of persistent variables
  -- 
  -- (2) Filter coefficients as a constant array
  -- 
  -- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  -- 
  --   Copyright 2011-2015 The MathWorks, Inc.
  -- 
  -- Load the filter coefficients
  -- 
  -- Clear tap delay line at beginning
  -- 
  -- Perform sum of products
  p1_output : PROCESS (tap_delay)
    VARIABLE c : signed(35 DOWNTO 0);
    VARIABLE add_cast : vector_of_signed37(0 TO 160);
    VARIABLE mul_temp : vector_of_signed28(0 TO 160);
    VARIABLE add_cast_0 : vector_of_signed37(0 TO 160);
    VARIABLE add_temp : vector_of_signed37(0 TO 160);
  BEGIN
    c := to_signed(0, 36);

    FOR k IN 0 TO 160 LOOP
      add_cast(k) := resize(c, 37);
      mul_temp(k) := tap_delay(k) * nc(k);
      add_cast_0(k) := resize(mul_temp(k), 37);
      add_temp(k) := add_cast(k) + add_cast_0(k);
      c := add_temp(k)(35 DOWNTO 0);
    END LOOP;

    c_1 <= c;
  END PROCESS p1_output;


  outdatabuf_tmp <= c_1(28 DOWNTO 15);

  outdatabuf <= std_logic_vector(outdatabuf_tmp);

  ce_out <= clk_enable;

END rtl;

